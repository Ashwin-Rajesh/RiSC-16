$date
	Fri Jan  8 14:13:39 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mem_reg_tb $end
$var wire 16 ! out2 [15:0] $end
$var wire 16 " out1 [15:0] $end
$var reg 1 # clk $end
$var reg 16 $ in [15:0] $end
$var reg 1 % rst $end
$var reg 3 & src1 [2:0] $end
$var reg 3 ' src2 [2:0] $end
$var reg 3 ( tgt [2:0] $end
$var reg 1 ) writeEn $end
$var integer 32 * i [31:0] $end
$scope module tud $end
$var wire 1 # clk $end
$var wire 16 + in [15:0] $end
$var wire 16 , out1 [15:0] $end
$var wire 16 - out2 [15:0] $end
$var wire 1 % rst $end
$var wire 3 . src1 [2:0] $end
$var wire 3 / src2 [2:0] $end
$var wire 3 0 tgt [2:0] $end
$var wire 1 ) writeEn $end
$var integer 32 1 i [31:0] $end
$scope begin write_block $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 1
b0 0
b10 /
bx .
bx -
bx ,
b1010 +
b0 *
1)
b0 (
b10 '
bx &
x%
b1010 $
0#
bx "
bx !
$end
#1
1#
#2
0#
b1 (
b1 0
b1011 $
b1011 +
b1 *
#3
1#
#4
0#
b10 (
b10 0
b1110 $
b1110 +
b10 *
#5
b1110 !
b1110 -
1#
#6
0#
b11 (
b11 0
b10011 $
b10011 +
b11 *
#7
1#
#8
0#
b100 (
b100 0
b11010 $
b11010 +
b100 *
#9
1#
#10
0#
b101 (
b101 0
b100011 $
b100011 +
b101 *
#11
1#
#12
0#
b110 (
b110 0
b101110 $
b101110 +
b110 *
#13
1#
#14
0#
b111 (
b111 0
b111011 $
b111011 +
b111 *
#15
1#
#16
0#
b111011 !
b111011 -
b111 '
b111 /
b0 &
b0 .
0)
b0 *
#17
1#
#18
0#
b101110 !
b101110 -
b110 '
b110 /
b1011 "
b1011 ,
b1 &
b1 .
b1 *
#19
1#
#20
0#
b100011 !
b100011 -
b101 '
b101 /
b1110 "
b1110 ,
b10 &
b10 .
b10 *
#21
1#
#22
0#
b11010 !
b11010 -
b100 '
b100 /
b10011 "
b10011 ,
b11 &
b11 .
b11 *
#23
1#
#24
0#
b10011 !
b10011 -
b11 '
b11 /
b11010 "
b11010 ,
b100 &
b100 .
b100 *
#25
1#
#26
0#
b1110 !
b1110 -
b10 '
b10 /
b100011 "
b100011 ,
b101 &
b101 .
b101 *
#27
1#
#28
0#
b1011 !
b1011 -
b1 '
b1 /
b101110 "
b101110 ,
b110 &
b110 .
b110 *
#29
1#
#30
0#
bx !
bx -
b0 '
b0 /
b111011 "
b111011 ,
b111 &
b111 .
b111 *
#31
1#
#32
0#
b1000 *
